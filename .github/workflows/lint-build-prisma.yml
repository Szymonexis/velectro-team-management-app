name: Lint, Build, and Prisma Check

on:
  pull_request:
    branches:
      - master
  workflow_dispatch: # Allows manual trigger

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache frontend node_modules
        id: cache-frontend
        uses: actions/cache@v4
        with: 
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies for frontend
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: |
          cd frontend
          npm ci

      - name: Run lint for frontend
        run: |
          cd frontend
          npm run lint

  lint-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache backend node_modules
        id: cache-backend
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install dependencies for backend
        if: steps.cache-backend.outputs.cache-hit != 'true'
        run: |
          cd backend
          npm ci

      - name: Run lint for backend
        run: |
          cd backend
          npm run lint

  build-frontend:
    needs: lint-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache frontend node_modules
        id: cache-frontend
        uses: actions/cache@v4
        with: 
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies for frontend
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  build-backend:
    needs: lint-backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache backend node_modules
        id: cache-backend
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install dependencies for backend
        if: steps.cache-backend.outputs.cache-hit != 'true'
        run: |
          cd backend
          npm ci

      - name: Build backend
        run: |
          cd backend
          npm run build

  prisma-validate:
    needs: build-backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    env:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: velectro-postgres
      POSTGRES_PORT: 5432
    services:
      postgres:
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache backend node_modules
        id: cache-backend
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install dependencies for backend
        if: steps.cache-backend.outputs.cache-hit != 'true'
        run: |
          cd backend
          npm ci

      - name: Check Prisma schema and migrations
        run: |
          cd backend
          npx prisma validate
